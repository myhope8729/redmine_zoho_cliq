- @settings = ActionController::Parameters.new(@settings) unless Rails.version >= '5.2'

br
h3 = l(:label_zoho_setting)
.info = t(:messenger_support_zoho)
br
p
  = content_tag(:label, l(:label_settings_zoho_authtoken))
  = text_field_tag('settings[zoho_authtoken]', @settings[:zoho_authtoken], size:30)
p
  = content_tag(:label, l(:label_settings_zoho_channel))
  = text_field_tag('settings[zoho_channel]', @settings[:zoho_channel], size:30)
p
  = content_tag(:label, l(:label_settings_zoho_username))
  = text_field_tag('settings[zoho_username]', @settings[:zoho_username], size:30)

h3 = l(:label_issue_plural)
.info = t(:messenger_issue_intro)
br
p
  = content_tag(:label, l(:label_settings_display_watchers))
  = check_box_tag 'settings[display_watchers]', 1, @settings[:display_watchers].to_i == 1
p
  = content_tag(:label, l(:label_settings_post_updates))
  = check_box_tag 'settings[post_updates]', 1, @settings[:post_updates].to_i == 1
p
  = content_tag(:label, l(:label_settings_new_include_description))
  = check_box_tag 'settings[new_include_description]', 1, @settings[:new_include_description].to_i == 1
p
  = content_tag(:label, l(:label_settings_updated_include_description))
  = check_box_tag 'settings[updated_include_description]', 1, @settings[:updated_include_description].to_i == 1
p
  = content_tag(:label, l(:label_settings_post_private_issues))
  = check_box_tag 'settings[post_private_issues]', 1, @settings[:post_private_issues].to_i == 1
p
  = content_tag(:label, l(:label_settings_post_private_notes))
  = check_box_tag 'settings[post_private_notes]', 1, @settings[:post_private_notes].to_i == 1

br
h3 = l(:label_wiki)
.info = t(:messenger_wiki_intro)
br
p
  = content_tag(:label, l(:label_settings_post_wiki))
  = check_box_tag 'settings[post_wiki]', 1, @settings[:post_wiki].to_i == 1
p
  = content_tag(:label, l(:label_settings_post_wiki_updates))
  = check_box_tag 'settings[post_wiki_updates]', 1, @settings[:post_wiki_updates].to_i == 1

- if RedmineZohoCliq::REDMINE_DB_SUPPORT
  br
  h3 = l(:label_db_entry_plural)
  .info = t(:messenger_db_intro)
  br
  p
    = content_tag(:label, l(:label_settings_post_db))
    = check_box_tag 'settings[post_db]', 1, @settings[:post_db].to_i == 1
  p
    = content_tag(:label, l(:label_settings_post_db_updates))
    = check_box_tag 'settings[post_db_updates]', 1, @settings[:post_db_updates].to_i == 1
  p
    = content_tag(:label, l(:label_settings_post_private_db))
    = check_box_tag 'settings[post_private_db]', 1, @settings[:post_private_db].to_i == 1

- if RedmineZohoCliq::REDMINE_CONTACTS_SUPPORT
  br
  h3 = l(:label_contact_plural)
  .info = t(:messenger_contacts_intro)
  br
  p
    = content_tag(:label, l(:label_settings_post_contact))
    = check_box_tag 'settings[post_contact]', 1, @settings[:post_contact].to_i == 1
  p
    = content_tag(:label, l(:label_settings_post_contact_updates))
    = check_box_tag 'settings[post_contact_updates]', 1, @settings[:post_contact_updates].to_i == 1
  p
    = content_tag(:label, l(:label_settings_post_private_contacts))
    = check_box_tag 'settings[post_private_contacts]', 1, @settings[:post_private_contacts].to_i == 1

- if Redmine::Plugin.installed?('redmine_passwords')
  br
  h3 = l(:label_password_plural)
  .info = t(:messenger_passwords_intro)
  br
  p
    = content_tag(:label, l(:label_settings_post_password))
    = check_box_tag 'settings[post_password]', 1, @settings[:post_password].to_i == 1
  p
    = content_tag(:label, l(:label_settings_post_password_updates))
    = check_box_tag 'settings[post_password_updates]', 1, @settings[:post_password_updates].to_i == 1

